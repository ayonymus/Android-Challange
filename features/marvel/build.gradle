apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'

Properties properties = new Properties()
if (project.file('local.properties').canRead()) {
    properties.load(project.file("local.properties").newDataInputStream())
}

android {
    compileSdkVersion Sdk.compileSdk
    buildToolsVersion Sdk.buildTools

    defaultConfig {
        minSdkVersion Sdk.minSdk
        targetSdkVersion Sdk.targetSdk
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        buildConfigField 'String', 'MARVEL_KEY', properties.getProperty('marvel_key', 'key not set"')
        buildConfigField 'String', 'MARVEL_PRIVATE_KEY', properties.getProperty('marvel_private_key', 'key not set"')
    }

    compileOptions {
        sourceCompatibility Sdk.javaVersion
        targetCompatibility Sdk.javaVersion
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    androidExtensions {
        experimental = true
    }
}

dependencies {
    implementation project(':libraries:core')
    implementation project(':libraries:repository')

    implementation "$And.constraintlayout"
    implementation "$And.core_ktx"
    implementation "$And.recyclerview"
    implementation "$And.lifecycle_ext"
    implementation "$And.lifecycle_reacitve"
    implementation "$And.material"

    // dagger
    kapt "$Dagger.compiler"
    kapt "$Dagger.android"
    implementation "$Dagger.dagger"
    implementation "$Dagger.android_support"

    // rx
    implementation "$Rx.java"
    implementation "$Rx.android"

    // network
    implementation "$Retrofit.retrofit2"
    implementation "$Retrofit.retrofit2_rx"
    implementation "$Retrofit.retrofit2_gson"
    implementation "$Retrofit.okhttp3"

    // recycler
    implementation "$Libs.groupie"
    implementation "$Libs.groupie_ext"

    implementation "$Libs.picasso"
    implementation "$Debug.timber"

    testImplementation "$TestLibs.junit"
    testImplementation "$TestLibs.mockito_kotlin"
}
